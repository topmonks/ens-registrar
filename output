goob!
ENSRegistry address is  0x8CE67F4206a281449b79E0687EB032DdE70eE153
Resolver address is  0x16A40430390a01c6A2f2Eb49D974040baEcdCdC3
TM Registrar address is  0x8A11a5ed497516e74A8Be694B0b803DDc6D4a42D
topmonks.eth is owned by:  0x8A11a5ed497516e74A8Be694B0b803DDc6D4a42D
test.topmonks.eth is owned by:  0xAcAAfe4A5eDbb1496f7D5a28b3568e3e9205Eb13
monika.topmonks.eth is owned by:  0xAcAAfe4A5eDbb1496f7D5a28b3568e3e9205Eb13
contract je  Contract {
  currentProvider: [Getter/Setter],
  _requestManager:
   RequestManager {
     provider:
      HttpProvider {
        host: 'http://127.0.0.1:8545',
        timeout: 0,
        connected: false,
        headers: undefined },
     providers:
      { WebsocketProvider: [Function: WebsocketProvider],
        HttpProvider: [Function: HttpProvider],
        IpcProvider: [Function: IpcProvider] },
     subscriptions: {} },
  givenProvider: null,
  providers:
   { WebsocketProvider: [Function: WebsocketProvider],
     HttpProvider: [Function: HttpProvider],
     IpcProvider: [Function: IpcProvider] },
  _provider:
   HttpProvider {
     host: 'http://127.0.0.1:8545',
     timeout: 0,
     connected: false,
     headers: undefined },
  setProvider: [Function],
  BatchRequest: [Function: bound Batch],
  extend:
   { [Function: ex]
     formatters:
      { inputDefaultBlockNumberFormatter: [Function: inputDefaultBlockNumberFormatter],
        inputBlockNumberFormatter: [Function: inputBlockNumberFormatter],
        inputCallFormatter: [Function: inputCallFormatter],
        inputTransactionFormatter: [Function: inputTransactionFormatter],
        inputAddressFormatter: [Function: inputAddressFormatter],
        inputPostFormatter: [Function: inputPostFormatter],
        inputLogFormatter: [Function: inputLogFormatter],
        inputSignFormatter: [Function: inputSignFormatter],
        outputBigNumberFormatter: [Function: outputBigNumberFormatter],
        outputTransactionFormatter: [Function: outputTransactionFormatter],
        outputTransactionReceiptFormatter: [Function: outputTransactionReceiptFormatter],
        outputBlockFormatter: [Function: outputBlockFormatter],
        outputLogFormatter: [Function: outputLogFormatter],
        outputPostFormatter: [Function: outputPostFormatter],
        outputSyncingFormatter: [Function: outputSyncingFormatter] },
     utils:
      { _fireError: [Function: _fireError],
        _jsonInterfaceMethodToString: [Function: _jsonInterfaceMethodToString],
        randomHex: [Function: randomHex],
        _: [Function],
        BN: [Function],
        isBN: [Function: isBN],
        isBigNumber: [Function: isBigNumber],
        isHex: [Function: isHex],
        isHexStrict: [Function: isHexStrict],
        sha3: [Function],
        keccak256: [Function],
        soliditySha3: [Function: soliditySha3],
        isAddress: [Function: isAddress],
        checkAddressChecksum: [Function: checkAddressChecksum],
        toChecksumAddress: [Function: toChecksumAddress],
        toHex: [Function: toHex],
        toBN: [Function: toBN],
        bytesToHex: [Function: bytesToHex],
        hexToBytes: [Function: hexToBytes],
        hexToNumberString: [Function: hexToNumberString],
        hexToNumber: [Function: hexToNumber],
        toDecimal: [Function: hexToNumber],
        numberToHex: [Function: numberToHex],
        fromDecimal: [Function: numberToHex],
        hexToUtf8: [Function: hexToUtf8],
        hexToString: [Function: hexToUtf8],
        toUtf8: [Function: hexToUtf8],
        utf8ToHex: [Function: utf8ToHex],
        stringToHex: [Function: utf8ToHex],
        fromUtf8: [Function: utf8ToHex],
        hexToAscii: [Function: hexToAscii],
        toAscii: [Function: hexToAscii],
        asciiToHex: [Function: asciiToHex],
        fromAscii: [Function: asciiToHex],
        unitMap: [Object],
        toWei: [Function: toWei],
        fromWei: [Function: fromWei],
        padLeft: [Function: leftPad],
        leftPad: [Function: leftPad],
        padRight: [Function: rightPad],
        rightPad: [Function: rightPad],
        toTwosComplement: [Function: toTwosComplement] },
     Method: [Function: Method] },
  clearSubscriptions: [Function],
  options: { address: [Getter/Setter], jsonInterface: [Getter/Setter] },
  defaultAccount: [Getter/Setter],
  defaultBlock: [Getter/Setter],
  methods:
   { resolver: [Function: bound _createTxObject],
     '0x04f3bcec': [Function: bound _createTxObject],
     'resolver()': [Function: bound _createTxObject],
     ens: [Function: bound _createTxObject],
     '0x3f15457f': [Function: bound _createTxObject],
     'ens()': [Function: bound _createTxObject],
     resolverAddr: [Function: bound _createTxObject],
     '0x52daf712': [Function: bound _createTxObject],
     'resolverAddr()': [Function: bound _createTxObject],
     renounceOwnership: [Function: bound _createTxObject],
     '0x715018a6': [Function: bound _createTxObject],
     'renounceOwnership()': [Function: bound _createTxObject],
     owner: [Function: bound _createTxObject],
     '0x8da5cb5b': [Function: bound _createTxObject],
     'owner()': [Function: bound _createTxObject],
     transferOwnership: [Function: bound _createTxObject],
     '0xf2fde38b': [Function: bound _createTxObject],
     'transferOwnership(address)': [Function: bound _createTxObject],
     rootNode: [Function: bound _createTxObject],
     '0xfaff50a8': [Function: bound _createTxObject],
     'rootNode()': [Function: bound _createTxObject],
     setRootNode: [Function: bound _createTxObject],
     '0xd20ab1d7': [Function: bound _createTxObject],
     'setRootNode(bytes32)': [Function: bound _createTxObject],
     setResolver: [Function: bound _createTxObject],
     '0x4e543b26': [Function: bound _createTxObject],
     'setResolver(address)': [Function: bound _createTxObject],
     setNodeOwner: [Function: bound _createTxObject],
     '0x77f9996b': [Function: bound _createTxObject],
     'setNodeOwner(address)': [Function: bound _createTxObject],
     setSubnodeOwner: [Function: bound _createTxObject],
     '0x8cb8ecec': [Function: bound _createTxObject],
     'setSubnodeOwner(bytes32,address)': [Function: bound _createTxObject],
     register: [Function: bound _createTxObject],
     '0xd22057a9': [Function: bound _createTxObject],
     'register(bytes32,address)': [Function: bound _createTxObject] },
  events:
   { OwnershipRenounced: [Function: bound ],
     '0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820': [Function: bound ],
     'OwnershipRenounced(address)': [Function: bound ],
     OwnershipTransferred: [Function: bound ],
     '0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0': [Function: bound ],
     'OwnershipTransferred(address,address)': [Function: bound ],
     allEvents: [Function: bound ] },
  _address: '0x8A11a5ed497516e74A8Be694B0b803DDc6D4a42D',
  _jsonInterface:
   [ { constant: true,
       inputs: [],
       name: 'resolver',
       outputs: [Array],
       payable: false,
       stateMutability: 'view',
       type: 'function',
       signature: '0x04f3bcec' },
     { constant: true,
       inputs: [],
       name: 'ens',
       outputs: [Array],
       payable: false,
       stateMutability: 'view',
       type: 'function',
       signature: '0x3f15457f' },
     { constant: true,
       inputs: [],
       name: 'resolverAddr',
       outputs: [Array],
       payable: false,
       stateMutability: 'view',
       type: 'function',
       signature: '0x52daf712' },
     { constant: false,
       inputs: [],
       name: 'renounceOwnership',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0x715018a6' },
     { constant: true,
       inputs: [],
       name: 'owner',
       outputs: [Array],
       payable: false,
       stateMutability: 'view',
       type: 'function',
       signature: '0x8da5cb5b' },
     { constant: false,
       inputs: [Array],
       name: 'transferOwnership',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0xf2fde38b' },
     { constant: true,
       inputs: [],
       name: 'rootNode',
       outputs: [Array],
       payable: false,
       stateMutability: 'view',
       type: 'function',
       signature: '0xfaff50a8' },
     { inputs: [Array],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'constructor' },
     { anonymous: false,
       inputs: [Array],
       name: 'OwnershipRenounced',
       type: 'event',
       signature:
        '0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820' },
     { anonymous: false,
       inputs: [Array],
       name: 'OwnershipTransferred',
       type: 'event',
       signature:
        '0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0' },
     { constant: false,
       inputs: [Array],
       name: 'setRootNode',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0xd20ab1d7' },
     { constant: false,
       inputs: [Array],
       name: 'setResolver',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0x4e543b26' },
     { constant: false,
       inputs: [Array],
       name: 'setNodeOwner',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0x77f9996b' },
     { constant: false,
       inputs: [Array],
       name: 'setSubnodeOwner',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0x8cb8ecec' },
     { constant: false,
       inputs: [Array],
       name: 'register',
       outputs: [],
       payable: false,
       stateMutability: 'nonpayable',
       type: 'function',
       signature: '0xd22057a9' } ] }
